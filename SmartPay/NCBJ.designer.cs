#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartPay
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NCB")]
	public partial class NCBJDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertnwc_Account_Type(nwc_Account_Type instance);
    partial void Updatenwc_Account_Type(nwc_Account_Type instance);
    partial void Deletenwc_Account_Type(nwc_Account_Type instance);
    partial void Insertnwc_Account(nwc_Account instance);
    partial void Updatenwc_Account(nwc_Account instance);
    partial void Deletenwc_Account(nwc_Account instance);
    partial void Insertnwc_AccountTransaction_log(nwc_AccountTransaction_log instance);
    partial void Updatenwc_AccountTransaction_log(nwc_AccountTransaction_log instance);
    partial void Deletenwc_AccountTransaction_log(nwc_AccountTransaction_log instance);
    partial void Insertnwc_BillCustomer(nwc_BillCustomer instance);
    partial void Updatenwc_BillCustomer(nwc_BillCustomer instance);
    partial void Deletenwc_BillCustomer(nwc_BillCustomer instance);
    partial void Insertnwc_Bill(nwc_Bill instance);
    partial void Updatenwc_Bill(nwc_Bill instance);
    partial void Deletenwc_Bill(nwc_Bill instance);
    partial void Insertnwc_BranchCustomer(nwc_BranchCustomer instance);
    partial void Updatenwc_BranchCustomer(nwc_BranchCustomer instance);
    partial void Deletenwc_BranchCustomer(nwc_BranchCustomer instance);
    partial void Insertnwc_Branch(nwc_Branch instance);
    partial void Updatenwc_Branch(nwc_Branch instance);
    partial void Deletenwc_Branch(nwc_Branch instance);
    partial void Insertnwc_CustomerAccount(nwc_CustomerAccount instance);
    partial void Updatenwc_CustomerAccount(nwc_CustomerAccount instance);
    partial void Deletenwc_CustomerAccount(nwc_CustomerAccount instance);
    partial void Insertnwc_Customer(nwc_Customer instance);
    partial void Updatenwc_Customer(nwc_Customer instance);
    partial void Deletenwc_Customer(nwc_Customer instance);
    partial void Insertnwc_trans_type(nwc_trans_type instance);
    partial void Updatenwc_trans_type(nwc_trans_type instance);
    partial void Deletenwc_trans_type(nwc_trans_type instance);
    partial void Insertnwc_Transaction_log(nwc_Transaction_log instance);
    partial void Updatenwc_Transaction_log(nwc_Transaction_log instance);
    partial void Deletenwc_Transaction_log(nwc_Transaction_log instance);
    #endregion
		
		public NCBJDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NCBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NCBJDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NCBJDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NCBJDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NCBJDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<nwc_Account_Type> nwc_Account_Types
		{
			get
			{
				return this.GetTable<nwc_Account_Type>();
			}
		}
		
		public System.Data.Linq.Table<nwc_Account> nwc_Accounts
		{
			get
			{
				return this.GetTable<nwc_Account>();
			}
		}
		
		public System.Data.Linq.Table<nwc_AccountTransaction_log> nwc_AccountTransaction_logs
		{
			get
			{
				return this.GetTable<nwc_AccountTransaction_log>();
			}
		}
		
		public System.Data.Linq.Table<nwc_BillCustomer> nwc_BillCustomers
		{
			get
			{
				return this.GetTable<nwc_BillCustomer>();
			}
		}
		
		public System.Data.Linq.Table<nwc_Bill> nwc_Bills
		{
			get
			{
				return this.GetTable<nwc_Bill>();
			}
		}
		
		public System.Data.Linq.Table<nwc_BranchCustomer> nwc_BranchCustomers
		{
			get
			{
				return this.GetTable<nwc_BranchCustomer>();
			}
		}
		
		public System.Data.Linq.Table<nwc_Branch> nwc_Branches
		{
			get
			{
				return this.GetTable<nwc_Branch>();
			}
		}
		
		public System.Data.Linq.Table<nwc_CustomerAccount> nwc_CustomerAccounts
		{
			get
			{
				return this.GetTable<nwc_CustomerAccount>();
			}
		}
		
		public System.Data.Linq.Table<nwc_Customer> nwc_Customers
		{
			get
			{
				return this.GetTable<nwc_Customer>();
			}
		}
		
		public System.Data.Linq.Table<nwc_trans_type> nwc_trans_types
		{
			get
			{
				return this.GetTable<nwc_trans_type>();
			}
		}
		
		public System.Data.Linq.Table<nwc_Transaction_log> nwc_Transaction_logs
		{
			get
			{
				return this.GetTable<nwc_Transaction_log>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Generate_Bill")]
		public int Generate_Bill([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cust_ID", DbType="Int")] System.Nullable<int> cust_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cust_name", DbType="NVarChar(50)")] string cust_name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Statement_date", DbType="DateTime")] System.Nullable<System.DateTime> statement_date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Due_date", DbType="DateTime")] System.Nullable<System.DateTime> due_date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bill_amount", DbType="Decimal(18,0)")] System.Nullable<decimal> bill_amount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cust_ID, cust_name, statement_date, due_date, bill_amount);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Recieve_Payment")]
		public int Recieve_Payment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> customerid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> acct_number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> payment_amt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> acct_balance, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> payment_datetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string transaction_type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerid, acct_number, payment_amt, acct_balance, payment_datetime, transaction_type);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_Account_Type")]
	public partial class nwc_Account_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Type_Id;
		
		private string _Account_type1;
		
		private decimal _InterestRate;
		
		private EntitySet<nwc_Account> _nwc_Accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnType_IdChanging(string value);
    partial void OnType_IdChanged();
    partial void OnAccount_type1Changing(string value);
    partial void OnAccount_type1Changed();
    partial void OnInterestRateChanging(decimal value);
    partial void OnInterestRateChanged();
    #endregion
		
		public nwc_Account_Type()
		{
			this._nwc_Accounts = new EntitySet<nwc_Account>(new Action<nwc_Account>(this.attach_nwc_Accounts), new Action<nwc_Account>(this.detach_nwc_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Id", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type_Id
		{
			get
			{
				return this._Type_Id;
			}
			set
			{
				if ((this._Type_Id != value))
				{
					this.OnType_IdChanging(value);
					this.SendPropertyChanging();
					this._Type_Id = value;
					this.SendPropertyChanged("Type_Id");
					this.OnType_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_type1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Account_type1
		{
			get
			{
				return this._Account_type1;
			}
			set
			{
				if ((this._Account_type1 != value))
				{
					this.OnAccount_type1Changing(value);
					this.SendPropertyChanging();
					this._Account_type1 = value;
					this.SendPropertyChanged("Account_type1");
					this.OnAccount_type1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRate", DbType="Decimal(18,0) NOT NULL")]
		public decimal InterestRate
		{
			get
			{
				return this._InterestRate;
			}
			set
			{
				if ((this._InterestRate != value))
				{
					this.OnInterestRateChanging(value);
					this.SendPropertyChanging();
					this._InterestRate = value;
					this.SendPropertyChanged("InterestRate");
					this.OnInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Account_Type_nwc_Account", Storage="_nwc_Accounts", ThisKey="Type_Id", OtherKey="Account_Type_Type_Id")]
		public EntitySet<nwc_Account> nwc_Accounts
		{
			get
			{
				return this._nwc_Accounts;
			}
			set
			{
				this._nwc_Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nwc_Accounts(nwc_Account entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Account_Type = this;
		}
		
		private void detach_nwc_Accounts(nwc_Account entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Account_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_Accounts")]
	public partial class nwc_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Account_Number;
		
		private int _Cust_num;
		
		private string _Account_type;
		
		private int _Balance;
		
		private string _Account_Type_Type_Id;
		
		private EntitySet<nwc_AccountTransaction_log> _nwc_AccountTransaction_logs;
		
		private EntitySet<nwc_CustomerAccount> _nwc_CustomerAccounts;
		
		private EntityRef<nwc_Account_Type> _nwc_Account_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccount_NumberChanging(int value);
    partial void OnAccount_NumberChanged();
    partial void OnCust_numChanging(int value);
    partial void OnCust_numChanged();
    partial void OnAccount_typeChanging(string value);
    partial void OnAccount_typeChanged();
    partial void OnBalanceChanging(int value);
    partial void OnBalanceChanged();
    partial void OnAccount_Type_Type_IdChanging(string value);
    partial void OnAccount_Type_Type_IdChanged();
    #endregion
		
		public nwc_Account()
		{
			this._nwc_AccountTransaction_logs = new EntitySet<nwc_AccountTransaction_log>(new Action<nwc_AccountTransaction_log>(this.attach_nwc_AccountTransaction_logs), new Action<nwc_AccountTransaction_log>(this.detach_nwc_AccountTransaction_logs));
			this._nwc_CustomerAccounts = new EntitySet<nwc_CustomerAccount>(new Action<nwc_CustomerAccount>(this.attach_nwc_CustomerAccounts), new Action<nwc_CustomerAccount>(this.detach_nwc_CustomerAccounts));
			this._nwc_Account_Type = default(EntityRef<nwc_Account_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Account_Number
		{
			get
			{
				return this._Account_Number;
			}
			set
			{
				if ((this._Account_Number != value))
				{
					this.OnAccount_NumberChanging(value);
					this.SendPropertyChanging();
					this._Account_Number = value;
					this.SendPropertyChanged("Account_Number");
					this.OnAccount_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_num", DbType="Int NOT NULL")]
		public int Cust_num
		{
			get
			{
				return this._Cust_num;
			}
			set
			{
				if ((this._Cust_num != value))
				{
					this.OnCust_numChanging(value);
					this.SendPropertyChanging();
					this._Cust_num = value;
					this.SendPropertyChanged("Cust_num");
					this.OnCust_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Account_type
		{
			get
			{
				return this._Account_type;
			}
			set
			{
				if ((this._Account_type != value))
				{
					this.OnAccount_typeChanging(value);
					this.SendPropertyChanging();
					this._Account_type = value;
					this.SendPropertyChanged("Account_type");
					this.OnAccount_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int NOT NULL")]
		public int Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Type_Type_Id", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string Account_Type_Type_Id
		{
			get
			{
				return this._Account_Type_Type_Id;
			}
			set
			{
				if ((this._Account_Type_Type_Id != value))
				{
					if (this._nwc_Account_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccount_Type_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Account_Type_Type_Id = value;
					this.SendPropertyChanged("Account_Type_Type_Id");
					this.OnAccount_Type_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Account_nwc_AccountTransaction_log", Storage="_nwc_AccountTransaction_logs", ThisKey="Account_Number", OtherKey="nwc_Accounts_Account_Number")]
		public EntitySet<nwc_AccountTransaction_log> nwc_AccountTransaction_logs
		{
			get
			{
				return this._nwc_AccountTransaction_logs;
			}
			set
			{
				this._nwc_AccountTransaction_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Account_nwc_CustomerAccount", Storage="_nwc_CustomerAccounts", ThisKey="Account_Number", OtherKey="nwc_Accounts_Account_Number")]
		public EntitySet<nwc_CustomerAccount> nwc_CustomerAccounts
		{
			get
			{
				return this._nwc_CustomerAccounts;
			}
			set
			{
				this._nwc_CustomerAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Account_Type_nwc_Account", Storage="_nwc_Account_Type", ThisKey="Account_Type_Type_Id", OtherKey="Type_Id", IsForeignKey=true)]
		public nwc_Account_Type nwc_Account_Type
		{
			get
			{
				return this._nwc_Account_Type.Entity;
			}
			set
			{
				nwc_Account_Type previousValue = this._nwc_Account_Type.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Account_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Account_Type.Entity = null;
						previousValue.nwc_Accounts.Remove(this);
					}
					this._nwc_Account_Type.Entity = value;
					if ((value != null))
					{
						value.nwc_Accounts.Add(this);
						this._Account_Type_Type_Id = value.Type_Id;
					}
					else
					{
						this._Account_Type_Type_Id = default(string);
					}
					this.SendPropertyChanged("nwc_Account_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nwc_AccountTransaction_logs(nwc_AccountTransaction_log entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Account = this;
		}
		
		private void detach_nwc_AccountTransaction_logs(nwc_AccountTransaction_log entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Account = null;
		}
		
		private void attach_nwc_CustomerAccounts(nwc_CustomerAccount entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Account = this;
		}
		
		private void detach_nwc_CustomerAccounts(nwc_CustomerAccount entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_AccountTransaction_log")]
	public partial class nwc_AccountTransaction_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nwc_Accounts_Account_Number;
		
		private int _nwc_Transaction_log_transaction_Id;
		
		private EntityRef<nwc_Account> _nwc_Account;
		
		private EntityRef<nwc_Transaction_log> _nwc_Transaction_log;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnwc_Accounts_Account_NumberChanging(int value);
    partial void Onnwc_Accounts_Account_NumberChanged();
    partial void Onnwc_Transaction_log_transaction_IdChanging(int value);
    partial void Onnwc_Transaction_log_transaction_IdChanged();
    #endregion
		
		public nwc_AccountTransaction_log()
		{
			this._nwc_Account = default(EntityRef<nwc_Account>);
			this._nwc_Transaction_log = default(EntityRef<nwc_Transaction_log>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nwc_Accounts_Account_Number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nwc_Accounts_Account_Number
		{
			get
			{
				return this._nwc_Accounts_Account_Number;
			}
			set
			{
				if ((this._nwc_Accounts_Account_Number != value))
				{
					if (this._nwc_Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnwc_Accounts_Account_NumberChanging(value);
					this.SendPropertyChanging();
					this._nwc_Accounts_Account_Number = value;
					this.SendPropertyChanged("nwc_Accounts_Account_Number");
					this.Onnwc_Accounts_Account_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nwc_Transaction_log_transaction_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nwc_Transaction_log_transaction_Id
		{
			get
			{
				return this._nwc_Transaction_log_transaction_Id;
			}
			set
			{
				if ((this._nwc_Transaction_log_transaction_Id != value))
				{
					if (this._nwc_Transaction_log.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnwc_Transaction_log_transaction_IdChanging(value);
					this.SendPropertyChanging();
					this._nwc_Transaction_log_transaction_Id = value;
					this.SendPropertyChanged("nwc_Transaction_log_transaction_Id");
					this.Onnwc_Transaction_log_transaction_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Account_nwc_AccountTransaction_log", Storage="_nwc_Account", ThisKey="nwc_Accounts_Account_Number", OtherKey="Account_Number", IsForeignKey=true)]
		public nwc_Account nwc_Account
		{
			get
			{
				return this._nwc_Account.Entity;
			}
			set
			{
				nwc_Account previousValue = this._nwc_Account.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Account.Entity = null;
						previousValue.nwc_AccountTransaction_logs.Remove(this);
					}
					this._nwc_Account.Entity = value;
					if ((value != null))
					{
						value.nwc_AccountTransaction_logs.Add(this);
						this._nwc_Accounts_Account_Number = value.Account_Number;
					}
					else
					{
						this._nwc_Accounts_Account_Number = default(int);
					}
					this.SendPropertyChanged("nwc_Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Transaction_log_nwc_AccountTransaction_log", Storage="_nwc_Transaction_log", ThisKey="nwc_Transaction_log_transaction_Id", OtherKey="transaction_Id", IsForeignKey=true)]
		public nwc_Transaction_log nwc_Transaction_log
		{
			get
			{
				return this._nwc_Transaction_log.Entity;
			}
			set
			{
				nwc_Transaction_log previousValue = this._nwc_Transaction_log.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Transaction_log.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Transaction_log.Entity = null;
						previousValue.nwc_AccountTransaction_logs.Remove(this);
					}
					this._nwc_Transaction_log.Entity = value;
					if ((value != null))
					{
						value.nwc_AccountTransaction_logs.Add(this);
						this._nwc_Transaction_log_transaction_Id = value.transaction_Id;
					}
					else
					{
						this._nwc_Transaction_log_transaction_Id = default(int);
					}
					this.SendPropertyChanged("nwc_Transaction_log");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_BillCustomer")]
	public partial class nwc_BillCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nwc_Bills_Bill_Id;
		
		private int _nwc_Customers_Cust_Id;
		
		private EntityRef<nwc_Bill> _nwc_Bill;
		
		private EntityRef<nwc_Customer> _nwc_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnwc_Bills_Bill_IdChanging(int value);
    partial void Onnwc_Bills_Bill_IdChanged();
    partial void Onnwc_Customers_Cust_IdChanging(int value);
    partial void Onnwc_Customers_Cust_IdChanged();
    #endregion
		
		public nwc_BillCustomer()
		{
			this._nwc_Bill = default(EntityRef<nwc_Bill>);
			this._nwc_Customer = default(EntityRef<nwc_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nwc_Bills_Bill_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nwc_Bills_Bill_Id
		{
			get
			{
				return this._nwc_Bills_Bill_Id;
			}
			set
			{
				if ((this._nwc_Bills_Bill_Id != value))
				{
					if (this._nwc_Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnwc_Bills_Bill_IdChanging(value);
					this.SendPropertyChanging();
					this._nwc_Bills_Bill_Id = value;
					this.SendPropertyChanged("nwc_Bills_Bill_Id");
					this.Onnwc_Bills_Bill_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nwc_Customers_Cust_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nwc_Customers_Cust_Id
		{
			get
			{
				return this._nwc_Customers_Cust_Id;
			}
			set
			{
				if ((this._nwc_Customers_Cust_Id != value))
				{
					if (this._nwc_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnwc_Customers_Cust_IdChanging(value);
					this.SendPropertyChanging();
					this._nwc_Customers_Cust_Id = value;
					this.SendPropertyChanged("nwc_Customers_Cust_Id");
					this.Onnwc_Customers_Cust_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Bill_nwc_BillCustomer", Storage="_nwc_Bill", ThisKey="nwc_Bills_Bill_Id", OtherKey="Bill_Id", IsForeignKey=true)]
		public nwc_Bill nwc_Bill
		{
			get
			{
				return this._nwc_Bill.Entity;
			}
			set
			{
				nwc_Bill previousValue = this._nwc_Bill.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Bill.Entity = null;
						previousValue.nwc_BillCustomers.Remove(this);
					}
					this._nwc_Bill.Entity = value;
					if ((value != null))
					{
						value.nwc_BillCustomers.Add(this);
						this._nwc_Bills_Bill_Id = value.Bill_Id;
					}
					else
					{
						this._nwc_Bills_Bill_Id = default(int);
					}
					this.SendPropertyChanged("nwc_Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Customer_nwc_BillCustomer", Storage="_nwc_Customer", ThisKey="nwc_Customers_Cust_Id", OtherKey="Cust_Id", IsForeignKey=true)]
		public nwc_Customer nwc_Customer
		{
			get
			{
				return this._nwc_Customer.Entity;
			}
			set
			{
				nwc_Customer previousValue = this._nwc_Customer.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Customer.Entity = null;
						previousValue.nwc_BillCustomers.Remove(this);
					}
					this._nwc_Customer.Entity = value;
					if ((value != null))
					{
						value.nwc_BillCustomers.Add(this);
						this._nwc_Customers_Cust_Id = value.Cust_Id;
					}
					else
					{
						this._nwc_Customers_Cust_Id = default(int);
					}
					this.SendPropertyChanged("nwc_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_Bills")]
	public partial class nwc_Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bill_Id;
		
		private int _Cust_ID;
		
		private string _Cust_name;
		
		private System.DateTime _Statement_Date;
		
		private System.DateTime _Due_Date;
		
		private int _Bill_Amt;
		
		private EntitySet<nwc_BillCustomer> _nwc_BillCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBill_IdChanging(int value);
    partial void OnBill_IdChanged();
    partial void OnCust_IDChanging(int value);
    partial void OnCust_IDChanged();
    partial void OnCust_nameChanging(string value);
    partial void OnCust_nameChanged();
    partial void OnStatement_DateChanging(System.DateTime value);
    partial void OnStatement_DateChanged();
    partial void OnDue_DateChanging(System.DateTime value);
    partial void OnDue_DateChanged();
    partial void OnBill_AmtChanging(int value);
    partial void OnBill_AmtChanged();
    #endregion
		
		public nwc_Bill()
		{
			this._nwc_BillCustomers = new EntitySet<nwc_BillCustomer>(new Action<nwc_BillCustomer>(this.attach_nwc_BillCustomers), new Action<nwc_BillCustomer>(this.detach_nwc_BillCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Bill_Id
		{
			get
			{
				return this._Bill_Id;
			}
			set
			{
				if ((this._Bill_Id != value))
				{
					this.OnBill_IdChanging(value);
					this.SendPropertyChanging();
					this._Bill_Id = value;
					this.SendPropertyChanged("Bill_Id");
					this.OnBill_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_ID", DbType="Int NOT NULL")]
		public int Cust_ID
		{
			get
			{
				return this._Cust_ID;
			}
			set
			{
				if ((this._Cust_ID != value))
				{
					this.OnCust_IDChanging(value);
					this.SendPropertyChanging();
					this._Cust_ID = value;
					this.SendPropertyChanged("Cust_ID");
					this.OnCust_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_name", DbType="NChar(4000) NOT NULL", CanBeNull=false)]
		public string Cust_name
		{
			get
			{
				return this._Cust_name;
			}
			set
			{
				if ((this._Cust_name != value))
				{
					this.OnCust_nameChanging(value);
					this.SendPropertyChanging();
					this._Cust_name = value;
					this.SendPropertyChanged("Cust_name");
					this.OnCust_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statement_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Statement_Date
		{
			get
			{
				return this._Statement_Date;
			}
			set
			{
				if ((this._Statement_Date != value))
				{
					this.OnStatement_DateChanging(value);
					this.SendPropertyChanging();
					this._Statement_Date = value;
					this.SendPropertyChanged("Statement_Date");
					this.OnStatement_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Due_Date
		{
			get
			{
				return this._Due_Date;
			}
			set
			{
				if ((this._Due_Date != value))
				{
					this.OnDue_DateChanging(value);
					this.SendPropertyChanging();
					this._Due_Date = value;
					this.SendPropertyChanged("Due_Date");
					this.OnDue_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_Amt", DbType="Int NOT NULL")]
		public int Bill_Amt
		{
			get
			{
				return this._Bill_Amt;
			}
			set
			{
				if ((this._Bill_Amt != value))
				{
					this.OnBill_AmtChanging(value);
					this.SendPropertyChanging();
					this._Bill_Amt = value;
					this.SendPropertyChanged("Bill_Amt");
					this.OnBill_AmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Bill_nwc_BillCustomer", Storage="_nwc_BillCustomers", ThisKey="Bill_Id", OtherKey="nwc_Bills_Bill_Id")]
		public EntitySet<nwc_BillCustomer> nwc_BillCustomers
		{
			get
			{
				return this._nwc_BillCustomers;
			}
			set
			{
				this._nwc_BillCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nwc_BillCustomers(nwc_BillCustomer entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Bill = this;
		}
		
		private void detach_nwc_BillCustomers(nwc_BillCustomer entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_BranchCustomer")]
	public partial class nwc_BranchCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nwc_Branches_Branch_code;
		
		private int _nwc_Customers_Cust_Id;
		
		private EntityRef<nwc_Branch> _nwc_Branch;
		
		private EntityRef<nwc_Customer> _nwc_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnwc_Branches_Branch_codeChanging(int value);
    partial void Onnwc_Branches_Branch_codeChanged();
    partial void Onnwc_Customers_Cust_IdChanging(int value);
    partial void Onnwc_Customers_Cust_IdChanged();
    #endregion
		
		public nwc_BranchCustomer()
		{
			this._nwc_Branch = default(EntityRef<nwc_Branch>);
			this._nwc_Customer = default(EntityRef<nwc_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nwc_Branches_Branch_code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nwc_Branches_Branch_code
		{
			get
			{
				return this._nwc_Branches_Branch_code;
			}
			set
			{
				if ((this._nwc_Branches_Branch_code != value))
				{
					if (this._nwc_Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnwc_Branches_Branch_codeChanging(value);
					this.SendPropertyChanging();
					this._nwc_Branches_Branch_code = value;
					this.SendPropertyChanged("nwc_Branches_Branch_code");
					this.Onnwc_Branches_Branch_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nwc_Customers_Cust_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nwc_Customers_Cust_Id
		{
			get
			{
				return this._nwc_Customers_Cust_Id;
			}
			set
			{
				if ((this._nwc_Customers_Cust_Id != value))
				{
					if (this._nwc_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnwc_Customers_Cust_IdChanging(value);
					this.SendPropertyChanging();
					this._nwc_Customers_Cust_Id = value;
					this.SendPropertyChanged("nwc_Customers_Cust_Id");
					this.Onnwc_Customers_Cust_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Branch_nwc_BranchCustomer", Storage="_nwc_Branch", ThisKey="nwc_Branches_Branch_code", OtherKey="Branch_code", IsForeignKey=true)]
		public nwc_Branch nwc_Branch
		{
			get
			{
				return this._nwc_Branch.Entity;
			}
			set
			{
				nwc_Branch previousValue = this._nwc_Branch.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Branch.Entity = null;
						previousValue.nwc_BranchCustomers.Remove(this);
					}
					this._nwc_Branch.Entity = value;
					if ((value != null))
					{
						value.nwc_BranchCustomers.Add(this);
						this._nwc_Branches_Branch_code = value.Branch_code;
					}
					else
					{
						this._nwc_Branches_Branch_code = default(int);
					}
					this.SendPropertyChanged("nwc_Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Customer_nwc_BranchCustomer", Storage="_nwc_Customer", ThisKey="nwc_Customers_Cust_Id", OtherKey="Cust_Id", IsForeignKey=true)]
		public nwc_Customer nwc_Customer
		{
			get
			{
				return this._nwc_Customer.Entity;
			}
			set
			{
				nwc_Customer previousValue = this._nwc_Customer.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Customer.Entity = null;
						previousValue.nwc_BranchCustomers.Remove(this);
					}
					this._nwc_Customer.Entity = value;
					if ((value != null))
					{
						value.nwc_BranchCustomers.Add(this);
						this._nwc_Customers_Cust_Id = value.Cust_Id;
					}
					else
					{
						this._nwc_Customers_Cust_Id = default(int);
					}
					this.SendPropertyChanged("nwc_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_Branches")]
	public partial class nwc_Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Branch_code;
		
		private string _branch_name;
		
		private string _branch_address;
		
		private EntitySet<nwc_BranchCustomer> _nwc_BranchCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranch_codeChanging(int value);
    partial void OnBranch_codeChanged();
    partial void Onbranch_nameChanging(string value);
    partial void Onbranch_nameChanged();
    partial void Onbranch_addressChanging(string value);
    partial void Onbranch_addressChanged();
    #endregion
		
		public nwc_Branch()
		{
			this._nwc_BranchCustomers = new EntitySet<nwc_BranchCustomer>(new Action<nwc_BranchCustomer>(this.attach_nwc_BranchCustomers), new Action<nwc_BranchCustomer>(this.detach_nwc_BranchCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Branch_code
		{
			get
			{
				return this._Branch_code;
			}
			set
			{
				if ((this._Branch_code != value))
				{
					this.OnBranch_codeChanging(value);
					this.SendPropertyChanging();
					this._Branch_code = value;
					this.SendPropertyChanged("Branch_code");
					this.OnBranch_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string branch_name
		{
			get
			{
				return this._branch_name;
			}
			set
			{
				if ((this._branch_name != value))
				{
					this.Onbranch_nameChanging(value);
					this.SendPropertyChanging();
					this._branch_name = value;
					this.SendPropertyChanged("branch_name");
					this.Onbranch_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string branch_address
		{
			get
			{
				return this._branch_address;
			}
			set
			{
				if ((this._branch_address != value))
				{
					this.Onbranch_addressChanging(value);
					this.SendPropertyChanging();
					this._branch_address = value;
					this.SendPropertyChanged("branch_address");
					this.Onbranch_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Branch_nwc_BranchCustomer", Storage="_nwc_BranchCustomers", ThisKey="Branch_code", OtherKey="nwc_Branches_Branch_code")]
		public EntitySet<nwc_BranchCustomer> nwc_BranchCustomers
		{
			get
			{
				return this._nwc_BranchCustomers;
			}
			set
			{
				this._nwc_BranchCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nwc_BranchCustomers(nwc_BranchCustomer entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Branch = this;
		}
		
		private void detach_nwc_BranchCustomers(nwc_BranchCustomer entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_CustomerAccount")]
	public partial class nwc_CustomerAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nwc_Accounts_Account_Number;
		
		private int _nwc_Customers_Cust_Id;
		
		private EntityRef<nwc_Account> _nwc_Account;
		
		private EntityRef<nwc_Customer> _nwc_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnwc_Accounts_Account_NumberChanging(int value);
    partial void Onnwc_Accounts_Account_NumberChanged();
    partial void Onnwc_Customers_Cust_IdChanging(int value);
    partial void Onnwc_Customers_Cust_IdChanged();
    #endregion
		
		public nwc_CustomerAccount()
		{
			this._nwc_Account = default(EntityRef<nwc_Account>);
			this._nwc_Customer = default(EntityRef<nwc_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nwc_Accounts_Account_Number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nwc_Accounts_Account_Number
		{
			get
			{
				return this._nwc_Accounts_Account_Number;
			}
			set
			{
				if ((this._nwc_Accounts_Account_Number != value))
				{
					if (this._nwc_Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnwc_Accounts_Account_NumberChanging(value);
					this.SendPropertyChanging();
					this._nwc_Accounts_Account_Number = value;
					this.SendPropertyChanged("nwc_Accounts_Account_Number");
					this.Onnwc_Accounts_Account_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nwc_Customers_Cust_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nwc_Customers_Cust_Id
		{
			get
			{
				return this._nwc_Customers_Cust_Id;
			}
			set
			{
				if ((this._nwc_Customers_Cust_Id != value))
				{
					if (this._nwc_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnwc_Customers_Cust_IdChanging(value);
					this.SendPropertyChanging();
					this._nwc_Customers_Cust_Id = value;
					this.SendPropertyChanged("nwc_Customers_Cust_Id");
					this.Onnwc_Customers_Cust_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Account_nwc_CustomerAccount", Storage="_nwc_Account", ThisKey="nwc_Accounts_Account_Number", OtherKey="Account_Number", IsForeignKey=true)]
		public nwc_Account nwc_Account
		{
			get
			{
				return this._nwc_Account.Entity;
			}
			set
			{
				nwc_Account previousValue = this._nwc_Account.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Account.Entity = null;
						previousValue.nwc_CustomerAccounts.Remove(this);
					}
					this._nwc_Account.Entity = value;
					if ((value != null))
					{
						value.nwc_CustomerAccounts.Add(this);
						this._nwc_Accounts_Account_Number = value.Account_Number;
					}
					else
					{
						this._nwc_Accounts_Account_Number = default(int);
					}
					this.SendPropertyChanged("nwc_Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Customer_nwc_CustomerAccount", Storage="_nwc_Customer", ThisKey="nwc_Customers_Cust_Id", OtherKey="Cust_Id", IsForeignKey=true)]
		public nwc_Customer nwc_Customer
		{
			get
			{
				return this._nwc_Customer.Entity;
			}
			set
			{
				nwc_Customer previousValue = this._nwc_Customer.Entity;
				if (((previousValue != value) 
							|| (this._nwc_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_Customer.Entity = null;
						previousValue.nwc_CustomerAccounts.Remove(this);
					}
					this._nwc_Customer.Entity = value;
					if ((value != null))
					{
						value.nwc_CustomerAccounts.Add(this);
						this._nwc_Customers_Cust_Id = value.Cust_Id;
					}
					else
					{
						this._nwc_Customers_Cust_Id = default(int);
					}
					this.SendPropertyChanged("nwc_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_Customers")]
	public partial class nwc_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cust_Id;
		
		private string _Cust_name;
		
		private int _branch_id;
		
		private string _Cust_address;
		
		private EntitySet<nwc_BillCustomer> _nwc_BillCustomers;
		
		private EntitySet<nwc_BranchCustomer> _nwc_BranchCustomers;
		
		private EntitySet<nwc_CustomerAccount> _nwc_CustomerAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCust_IdChanging(int value);
    partial void OnCust_IdChanged();
    partial void OnCust_nameChanging(string value);
    partial void OnCust_nameChanged();
    partial void Onbranch_idChanging(int value);
    partial void Onbranch_idChanged();
    partial void OnCust_addressChanging(string value);
    partial void OnCust_addressChanged();
    #endregion
		
		public nwc_Customer()
		{
			this._nwc_BillCustomers = new EntitySet<nwc_BillCustomer>(new Action<nwc_BillCustomer>(this.attach_nwc_BillCustomers), new Action<nwc_BillCustomer>(this.detach_nwc_BillCustomers));
			this._nwc_BranchCustomers = new EntitySet<nwc_BranchCustomer>(new Action<nwc_BranchCustomer>(this.attach_nwc_BranchCustomers), new Action<nwc_BranchCustomer>(this.detach_nwc_BranchCustomers));
			this._nwc_CustomerAccounts = new EntitySet<nwc_CustomerAccount>(new Action<nwc_CustomerAccount>(this.attach_nwc_CustomerAccounts), new Action<nwc_CustomerAccount>(this.detach_nwc_CustomerAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cust_Id
		{
			get
			{
				return this._Cust_Id;
			}
			set
			{
				if ((this._Cust_Id != value))
				{
					this.OnCust_IdChanging(value);
					this.SendPropertyChanging();
					this._Cust_Id = value;
					this.SendPropertyChanged("Cust_Id");
					this.OnCust_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_name", DbType="NChar(4000) NOT NULL", CanBeNull=false)]
		public string Cust_name
		{
			get
			{
				return this._Cust_name;
			}
			set
			{
				if ((this._Cust_name != value))
				{
					this.OnCust_nameChanging(value);
					this.SendPropertyChanging();
					this._Cust_name = value;
					this.SendPropertyChanged("Cust_name");
					this.OnCust_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_id", DbType="Int NOT NULL")]
		public int branch_id
		{
			get
			{
				return this._branch_id;
			}
			set
			{
				if ((this._branch_id != value))
				{
					this.Onbranch_idChanging(value);
					this.SendPropertyChanging();
					this._branch_id = value;
					this.SendPropertyChanged("branch_id");
					this.Onbranch_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Cust_address
		{
			get
			{
				return this._Cust_address;
			}
			set
			{
				if ((this._Cust_address != value))
				{
					this.OnCust_addressChanging(value);
					this.SendPropertyChanging();
					this._Cust_address = value;
					this.SendPropertyChanged("Cust_address");
					this.OnCust_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Customer_nwc_BillCustomer", Storage="_nwc_BillCustomers", ThisKey="Cust_Id", OtherKey="nwc_Customers_Cust_Id")]
		public EntitySet<nwc_BillCustomer> nwc_BillCustomers
		{
			get
			{
				return this._nwc_BillCustomers;
			}
			set
			{
				this._nwc_BillCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Customer_nwc_BranchCustomer", Storage="_nwc_BranchCustomers", ThisKey="Cust_Id", OtherKey="nwc_Customers_Cust_Id")]
		public EntitySet<nwc_BranchCustomer> nwc_BranchCustomers
		{
			get
			{
				return this._nwc_BranchCustomers;
			}
			set
			{
				this._nwc_BranchCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Customer_nwc_CustomerAccount", Storage="_nwc_CustomerAccounts", ThisKey="Cust_Id", OtherKey="nwc_Customers_Cust_Id")]
		public EntitySet<nwc_CustomerAccount> nwc_CustomerAccounts
		{
			get
			{
				return this._nwc_CustomerAccounts;
			}
			set
			{
				this._nwc_CustomerAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nwc_BillCustomers(nwc_BillCustomer entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Customer = this;
		}
		
		private void detach_nwc_BillCustomers(nwc_BillCustomer entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Customer = null;
		}
		
		private void attach_nwc_BranchCustomers(nwc_BranchCustomer entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Customer = this;
		}
		
		private void detach_nwc_BranchCustomers(nwc_BranchCustomer entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Customer = null;
		}
		
		private void attach_nwc_CustomerAccounts(nwc_CustomerAccount entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Customer = this;
		}
		
		private void detach_nwc_CustomerAccounts(nwc_CustomerAccount entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_trans_type")]
	public partial class nwc_trans_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transtype_Id;
		
		private string _transtype_desc;
		
		private EntitySet<nwc_Transaction_log> _nwc_Transaction_logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontranstype_IdChanging(string value);
    partial void Ontranstype_IdChanged();
    partial void Ontranstype_descChanging(string value);
    partial void Ontranstype_descChanged();
    #endregion
		
		public nwc_trans_type()
		{
			this._nwc_Transaction_logs = new EntitySet<nwc_Transaction_log>(new Action<nwc_Transaction_log>(this.attach_nwc_Transaction_logs), new Action<nwc_Transaction_log>(this.detach_nwc_Transaction_logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transtype_Id", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transtype_Id
		{
			get
			{
				return this._transtype_Id;
			}
			set
			{
				if ((this._transtype_Id != value))
				{
					this.Ontranstype_IdChanging(value);
					this.SendPropertyChanging();
					this._transtype_Id = value;
					this.SendPropertyChanged("transtype_Id");
					this.Ontranstype_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transtype_desc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string transtype_desc
		{
			get
			{
				return this._transtype_desc;
			}
			set
			{
				if ((this._transtype_desc != value))
				{
					this.Ontranstype_descChanging(value);
					this.SendPropertyChanging();
					this._transtype_desc = value;
					this.SendPropertyChanged("transtype_desc");
					this.Ontranstype_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_trans_type_nwc_Transaction_log", Storage="_nwc_Transaction_logs", ThisKey="transtype_Id", OtherKey="trans_type1_transtype_Id")]
		public EntitySet<nwc_Transaction_log> nwc_Transaction_logs
		{
			get
			{
				return this._nwc_Transaction_logs;
			}
			set
			{
				this._nwc_Transaction_logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nwc_Transaction_logs(nwc_Transaction_log entity)
		{
			this.SendPropertyChanging();
			entity.nwc_trans_type = this;
		}
		
		private void detach_nwc_Transaction_logs(nwc_Transaction_log entity)
		{
			this.SendPropertyChanging();
			entity.nwc_trans_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nwc_Transaction_log")]
	public partial class nwc_Transaction_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _transaction_Id;
		
		private int _acct_num;
		
		private string _trans_desc;
		
		private int _trans_amt;
		
		private System.DateTime _date_time;
		
		private string _customer;
		
		private string _trans_type1_transtype_Id;
		
		private EntitySet<nwc_AccountTransaction_log> _nwc_AccountTransaction_logs;
		
		private EntityRef<nwc_trans_type> _nwc_trans_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontransaction_IdChanging(int value);
    partial void Ontransaction_IdChanged();
    partial void Onacct_numChanging(int value);
    partial void Onacct_numChanged();
    partial void Ontrans_descChanging(string value);
    partial void Ontrans_descChanged();
    partial void Ontrans_amtChanging(int value);
    partial void Ontrans_amtChanged();
    partial void Ondate_timeChanging(System.DateTime value);
    partial void Ondate_timeChanged();
    partial void OncustomerChanging(string value);
    partial void OncustomerChanged();
    partial void Ontrans_type1_transtype_IdChanging(string value);
    partial void Ontrans_type1_transtype_IdChanged();
    #endregion
		
		public nwc_Transaction_log()
		{
			this._nwc_AccountTransaction_logs = new EntitySet<nwc_AccountTransaction_log>(new Action<nwc_AccountTransaction_log>(this.attach_nwc_AccountTransaction_logs), new Action<nwc_AccountTransaction_log>(this.detach_nwc_AccountTransaction_logs));
			this._nwc_trans_type = default(EntityRef<nwc_trans_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int transaction_Id
		{
			get
			{
				return this._transaction_Id;
			}
			set
			{
				if ((this._transaction_Id != value))
				{
					this.Ontransaction_IdChanging(value);
					this.SendPropertyChanging();
					this._transaction_Id = value;
					this.SendPropertyChanged("transaction_Id");
					this.Ontransaction_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acct_num", DbType="Int NOT NULL")]
		public int acct_num
		{
			get
			{
				return this._acct_num;
			}
			set
			{
				if ((this._acct_num != value))
				{
					this.Onacct_numChanging(value);
					this.SendPropertyChanging();
					this._acct_num = value;
					this.SendPropertyChanged("acct_num");
					this.Onacct_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_desc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string trans_desc
		{
			get
			{
				return this._trans_desc;
			}
			set
			{
				if ((this._trans_desc != value))
				{
					this.Ontrans_descChanging(value);
					this.SendPropertyChanging();
					this._trans_desc = value;
					this.SendPropertyChanged("trans_desc");
					this.Ontrans_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_amt", DbType="Int NOT NULL")]
		public int trans_amt
		{
			get
			{
				return this._trans_amt;
			}
			set
			{
				if ((this._trans_amt != value))
				{
					this.Ontrans_amtChanging(value);
					this.SendPropertyChanging();
					this._trans_amt = value;
					this.SendPropertyChanged("trans_amt");
					this.Ontrans_amtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_time", DbType="DateTime NOT NULL")]
		public System.DateTime date_time
		{
			get
			{
				return this._date_time;
			}
			set
			{
				if ((this._date_time != value))
				{
					this.Ondate_timeChanging(value);
					this.SendPropertyChanging();
					this._date_time = value;
					this.SendPropertyChanged("date_time");
					this.Ondate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_type1_transtype_Id", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string trans_type1_transtype_Id
		{
			get
			{
				return this._trans_type1_transtype_Id;
			}
			set
			{
				if ((this._trans_type1_transtype_Id != value))
				{
					if (this._nwc_trans_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontrans_type1_transtype_IdChanging(value);
					this.SendPropertyChanging();
					this._trans_type1_transtype_Id = value;
					this.SendPropertyChanged("trans_type1_transtype_Id");
					this.Ontrans_type1_transtype_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_Transaction_log_nwc_AccountTransaction_log", Storage="_nwc_AccountTransaction_logs", ThisKey="transaction_Id", OtherKey="nwc_Transaction_log_transaction_Id")]
		public EntitySet<nwc_AccountTransaction_log> nwc_AccountTransaction_logs
		{
			get
			{
				return this._nwc_AccountTransaction_logs;
			}
			set
			{
				this._nwc_AccountTransaction_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nwc_trans_type_nwc_Transaction_log", Storage="_nwc_trans_type", ThisKey="trans_type1_transtype_Id", OtherKey="transtype_Id", IsForeignKey=true)]
		public nwc_trans_type nwc_trans_type
		{
			get
			{
				return this._nwc_trans_type.Entity;
			}
			set
			{
				nwc_trans_type previousValue = this._nwc_trans_type.Entity;
				if (((previousValue != value) 
							|| (this._nwc_trans_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nwc_trans_type.Entity = null;
						previousValue.nwc_Transaction_logs.Remove(this);
					}
					this._nwc_trans_type.Entity = value;
					if ((value != null))
					{
						value.nwc_Transaction_logs.Add(this);
						this._trans_type1_transtype_Id = value.transtype_Id;
					}
					else
					{
						this._trans_type1_transtype_Id = default(string);
					}
					this.SendPropertyChanged("nwc_trans_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nwc_AccountTransaction_logs(nwc_AccountTransaction_log entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Transaction_log = this;
		}
		
		private void detach_nwc_AccountTransaction_logs(nwc_AccountTransaction_log entity)
		{
			this.SendPropertyChanging();
			entity.nwc_Transaction_log = null;
		}
	}
}
#pragma warning restore 1591
